    Binary search. Binary search. Binary search. This is an incredibly important concept, and it pops up in everything from convex optimization to databases. If you need to find a particular value in a big set of things, and you can figure out which direction you need to go, use binary search for a MASSIVE speed up.
    Matrix operations. Now, this one only pops up for me because I'm more of a data scientist, but in general, it's important to remember that matrix multiplication is faster than you think it is. Brilliant people have come up with incredibly unintuitive algorithms to make matrices multiply in O(n^2.something) instead of O(n^3), like you would expect. In practice, these algorithms aren't necessarily used, but the BLAS and MPI libraries do provide incredibly fast matrix multiplication all the same. Anytime you can express a bunch of calculations in terms of matrix operations, you win.
    Linear regression. Simple, beautiful, and useful.
    Caching. Just…use caching. Does that count as an algorithm? I don't know, but it is the cause of, and solution to, all of your problems.
    The idea of a concurrent work queue.
    Knowing when to throw hashtables at a problem.




    Binary search
    Quicksort
    Backtracking
    Hash table
    Linear congruential generator and Mersenne Twister
    Linear least squares
    Karatsuba algorithm
    Divide and conquer for Matrix multiplication
    Dijkstra's algorithm
    Knuth–Morris–Pratt algorithm
